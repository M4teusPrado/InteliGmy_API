name: Continuous Integration

on:
  push:
    branches: [ "master" ]


env:
  PROJECT_ID: inteligmy
  SERVICE: InteliGmy
  REGION: southamerica-east1


jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install Dependencies
        run: mvn -B install --file pom.xml

  package:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Package the Project
        run: mvn -B package --file pom.xml

  test:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Tests
        run: mvn -B test --file pom.xml

  update_dependency_graph:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven


  deploy:
    runs-on: ubuntu-latest
    needs: update_dependency_graph


    permissions:
      contents: 'read'
      id-token: 'write'


    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2


      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.SA_CREDS }}'

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If required, update to the appropriate source folder
          source: ./

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}